{
	"info": {
		"_postman_id": "3ff25b35-6235-4eed-ad35-6bd74a8cccc1",
		"name": "Philance",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad291fe8-5203-42ed-b586-aa4f65420c46",
						"type": "text/javascript",
						"exec": [
							"var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"switch (responseCode.code){",
							"    ",
							"    case 200:{",
							"        tests[\"Status code is 200\"] = responseCode.code === 200;",
							"        tests[\"Names matched\"] = ((resBody.user.firstName === reqBody.firstName)&&(resBody.user.lastName === reqBody.lastName));",
							"        // tests[\"Emails matched\"] = resBody.email===reqbody.email;",
							"        ",
							"        break;",
							"    }",
							"    case 409:{",
							"        tests[\"Status code is 409\"] = responseCode.code === 409;",
							"        // console.log(resBody.user.firstName+'---+++'+reqBody.firstName)",
							"        // tests[\"Names matched\"] = ((resBody.user.firstName==reqBody.firstName)&&(resBody.user.lastName==reqBody.lastName));",
							"        // tests[\"Emails matched\"] = resBody.user.email===reqBody.email;",
							"        break;",
							"    }",
							"    default:{",
							"        tests[\"Valid Response\"] = false;",
							"    }",
							"    ",
							"}",
							"",
							"// tests[\"message\"] = jsonData.message.includes(\"Registered Successfully\");",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic cm9vdDpaZW50cmUxMTA="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\" : \"Vijay\",\n    \"lastName\" : \"Gandra\",\n    \"email\" : \"vijy.gandra@gmail.com\",\n    \"password\" : \"test123\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Register a user copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "84ca520a-52ec-459b-9cf6-dbe7bfa5290f",
						"type": "text/javascript",
						"exec": [
							"var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"switch (responseCode.code){",
							"    ",
							"    case 200:{",
							"        tests[\"Status code is 200\"] = responseCode.code === 200;",
							"        tests[\"Names matched\"] = ((resBody.user.firstName === reqBody.firstName)&&(resBody.user.lastName === reqBody.lastName));",
							"        tests[\"Emails matched\"] = resBody.user.email===reqBody.email;",
							"        ",
							"        break;",
							"    }",
							"    case 409:{",
							"        tests[\"Status code is 409\"] = responseCode.code === 409;",
							"        // console.log(resBody.user.firstName+'---+++'+reqBody.firstName)",
							"        // tests[\"Names matched\"] = ((resBody.user.firstName==reqBody.firstName)&&(resBody.user.lastName==reqBody.lastName));",
							"        tests[\"Emails matched\"] = resBody.user.email===reqBody.email;",
							"        break;",
							"    }",
							"    default:{",
							"        tests[\"Valid Response\"] = false;",
							"    }",
							"    ",
							"}",
							"",
							"// tests[\"message\"] = jsonData.message.includes(\"Registered Successfully\");",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstName\" : \"Karthik\",\n\t\"lastName\" : \"Sarvepalli\",\n\t\"email\" : \"karthik4.sarvepalli@gmail.com\",\n\t\"password\" : \"abc1234\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "User login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ce1247d-9224-43ba-b60f-0bb0b91d2cb9",
						"type": "text/javascript",
						"exec": [
							"",
							"var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"switch (responseCode.code){",
							"    ",
							"    case 200:{",
							"        tests[\"Status code is 200\"] = responseCode.code === 200;",
							"        tests[\"Authentication\"] = resBody.message === \"authentication successful\";",
							"        tests[\"Returned token\"] = resBody.token !== null;",
							"        ",
							"        break;",
							"    }",
							"    case 409:{",
							"        tests[\"Status code is 409\"] = responseCode.code === 409;",
							"        tests[\"Authentication Fail\"] = resBody.message === \"authentication failed\";",
							"        break;",
							"    }",
							"    default:{",
							"        tests[\"Valid Response\"] = false;",
							"    }",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic cm9vdDpaZW50cmUxMTA="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"vijy.gandra@gmail.com\",\n    \"password\" : \"test123\"\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "08a8d3e3-bc25-4bbf-bf81-4efc8677c568",
						"type": "text/javascript",
						"exec": [
							"// var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"var flag=true",
							"switch (responseCode.code){",
							"    ",
							"    case 200:{",
							"        tests[\"Status code is 200\"] = responseCode.code === 200;",
							"        tests[\"User ID Confirmation\"] = resBody.user[0].userId === 1;",
							"        for(var i=0;i<resBody.user[0].user_skills.length;i++){",
							"            if(resBody.user[0].user_skills[i].userId!=1){",
							"                flag=false",
							"                break;",
							"            }",
							"        }",
							"        tests[\"User ID Confirmation in user skills\"]=flag;",
							"        break;",
							"    }",
							"    case 409:{",
							"        tests[\"Status code is 409\"] = responseCode.code === 409;",
							"        tests[\"Authentication Fail\"] = resBody.message === \"authentication failed\";",
							"        break;",
							"    }",
							"    default:{",
							"        tests[\"Valid Response\"] = false;",
							"    }",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"1"
					]
				},
				"description": "UserSearchById"
			},
			"response": []
		},
		{
			"name": "User Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "baf9afa3-1767-4bcf-a234-2ef70173e509",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Vijaya\",\n    \"lastName\": \"Gandra\",            \n    \"email\": \"mskasr@yahoo.com\",\n    \"password\": \"mskasr@yahoo.com\",\n    \"contact\": \"9876543210\",\n    \"postalCode\": \"123456\",\n    \"country\": \"India\",\n    \"description\": \"description\",\n    \"title\": \"title\",\n    \"organization\": \"organization\",\n    \"interests\": \"asxssad, asdasda\",\n    \"currentEmail\": \"vijy.gandra@gmail.com\",\n    \"userId\":1\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"1"
					]
				},
				"description": "UserUpdate"
			},
			"response": []
		},
		{
			"name": "Get User By Id After Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f3ae3a2-a917-4a88-bb12-f9a7bf611a58",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"1"
					]
				},
				"description": "UserSearchById"
			},
			"response": []
		},
		{
			"name": "Create Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3f08c36b-b507-4c92-9615-f58379a1ee47",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"status\"] = jsonData.project[0].status === \"ACTIVE\";",
							"tests[\"projectName\"] = jsonData.project[0].projectName === \"Create Project for Test Apply\";",
							"tests[\"volunteers\"] = jsonData.project[0].volunteers === \"2\";",
							"tests[\"freelancers\"] = jsonData.project[0].freelancers === \"6\";",
							"tests[\"startDate\"] = jsonData.project[0].startDate.includes(\"2018-07-24\");",
							"tests[\"endDate\"] = jsonData.project[0].endDate.includes('2018-08-31');",
							"tests[\"estimatedBudget\"] = jsonData.project[0].estimatedBudget === \"10000.00\";"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"projectName\" : \"Create Project for Test Apply\",\r\n   \"description\" : \"Create Project for Test from Postman\",\r\n   \"zipCode\":123456,\r\n   \"country\":\"India\",\r\n   \"volunteers\":\"2\",\r\n   \"freelancers\":\"6\",\r\n   \"estimatedBudget\":\"10000\",\r\n   \"userId\":\"1\",\r\n   \"startDate\" :\"07/24/2018\",\r\n   \"endDate\" :\"08/31/2018\",\r\n   \r\n   \"projectDetails\":[  \r\n      {  \r\n        \"detailType\": \"SKILLS\",\r\n        \"name\": \"Database Development\",\r\n        \"certificationReq\": \"NO\",\r\n        \"certificationLink\": \"\",\r\n        \"attribute1\" : \"\",\r\n        \"attribute2\" : \"\",\r\n        \"attribute3\" : \"\",\r\n        \"attribute4\" : \"\",\r\n        \"attribute5\" : \"\"\r\n      },\r\n      {  \r\n        \"detailType\": \"SKILLS\",\r\n        \"name\": \"Node JS Development\",\r\n        \"certificationReq\": \"NO\",\r\n        \"certificationLink\": \"\",\r\n        \"attribute1\" : \"\",\r\n        \"attribute2\" : \"\",\r\n        \"attribute3\" : \"\",\r\n        \"attribute4\" : \"\",\r\n        \"attribute5\" : \"\"\r\n      },\r\n      {  \r\n        \"detailType\": \"IMPACT_CATEGORY\",\r\n        \"name\": \"Elderly\",\r\n        \"certificationReq\": \"NO\",\r\n        \"certificationLink\": \"\",\r\n        \"attribute1\" : \"\",\r\n        \"attribute2\" : \"\",\r\n        \"attribute3\" : \"\",\r\n        \"attribute4\" : \"\",\r\n        \"attribute5\" : \"\"\r\n      },\r\n      {  \r\n        \"detailType\": \"IMPACT_CATEGORY\",\r\n        \"name\": \"Other\",\r\n        \"certificationReq\": \"NO\",\r\n        \"certificationLink\": \"\",\r\n        \"attribute1\" : \"\",\r\n        \"attribute2\" : \"\",\r\n        \"attribute3\" : \"\",\r\n        \"attribute4\" : \"\",\r\n        \"attribute5\" : \"\"\r\n      }\r\n   ]\r\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/projects/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"projects",
						""
					]
				},
				"description": "Create Project"
			},
			"response": []
		},
		{
			"name": "Project Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95316804-dbff-450c-9aac-5b0c5decdcf8",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic cm9vdDpaZW50cmUxMTA="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n\t\"impactCategories\":[\n\t\t\"Elderly\",\n\t\t\"Youth Welfare\",\n\t\t\"Womens Welfare\",\n\t\t\"Violence Prevention\"\n\t]\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/projects/search",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"projects",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Project By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "85c0d4ea-d81a-46d6-b95a-b9a4a85c1b1c",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/philance/projects/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"projects",
						"1"
					]
				},
				"description": "ProjectSearchById"
			},
			"response": []
		},
		{
			"name": "My Projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aebb438d-6e57-4aa4-a50e-783a218b647c",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"project_Id\"] = jsonData.Projects[0].project_id === 1;",
							"tests[\"status\"] = jsonData.Projects[0].status === \"ACTIVE\";",
							"tests[\"created_by\"] = jsonData.Projects[0].created_by === 1;",
							"tests[\"OWNER\"] = jsonData.Projects[0].OWNER === \"OWNER\";",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/1/projects/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"1",
						"projects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Apply For Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25f42cb7-28dd-44c8-91e9-128a85269fb7",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"userId\" : \"2\",\r\n\"applicantMessage\" : \"Applying for the Project for Test\",\r\n\"role\" : \"APPLICANT\",\r\n\"type\" : \"\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/projects/1/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"projects",
						"1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Candidate List For Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/philance/projects/1/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"projects",
						"1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Candidate Accept or Reject",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"projectTeam\":[  \r\n      {  \r\n         \"applicantId\":\"2\",\r\n         \"startDate\":\"\",\r\n         \"endDate\":\"\",\r\n         \"role\":\"APPLICANT\",\r\n         \"type\":\"\",\r\n         \"status\":\"ACCEPT\",\r\n         \"userId\":\"1\"\r\n      }\r\n   ]\r\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/projects/1/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"projects",
						"1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Common Lookup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de07589b-a560-4a53-a49c-5371769b1451",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3001/philance/lookups/interests",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"lookups",
						"interests"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c805aac0-69e4-47fa-b7dc-cc22ead43d91",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"status\"] = jsonData.project[0].status === \"ACTIVE\";",
							"tests[\"projectName\"] = jsonData.project[0].projectName === \"Create Project From Postman\";",
							"tests[\"volunteers\"] = jsonData.project[0].volunteers === \"1\";",
							"tests[\"freelancers\"] = jsonData.project[0].freelancers === \"2\";",
							"tests[\"location\"] = jsonData.project[0].location === \"Nashua,NH\";",
							"tests[\"startDate\"] = jsonData.project[0].startDate.includes(\"2018-08-08\");",
							"tests[\"endDate\"] = jsonData.project[0].endDate.includes('2018-08-31');",
							"tests[\"estimatedBudget\"] = jsonData.project[0].estimatedBudget === \"10.00\";",
							"tests[\"createdBy\"] = jsonData.project[0].createdBy === 1;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"projectName\" : \"Create Project From Postman\",\r\n   \"description\" : \"Create Project description From Postman\",\r\n   \"location\":\"Nashua,NH\",\r\n   \"volunteers\":\"1\",\r\n   \"freelancers\":\"2\",\r\n   \"estimatedBudget\":\"10\",\r\n   \"userId\":\"1\",\r\n   \"startDate\" :\"08/08/2018\",\r\n   \"endDate\" :\"08/31/2018\",\r\n   \"projectDetails\":[  \r\n      {  \r\n        \"detailType\": \"SKILLS\",\r\n        \"name\": \"NODE JS Development\",\r\n        \"certificationReq\": \"NO\",\r\n        \"certificationLink\": \"\",\r\n        \"attribute1\" : \"\",\r\n        \"attribute2\" : \"\",\r\n        \"attribute3\" : \"\",\r\n        \"attribute4\" : \"\",\r\n        \"attribute5\" : \"\"\r\n      },\r\n      {  \r\n      \"detailType\": \"IMPACT_CATEGORY\",\r\n        \"name\": \"Other\",\r\n        \"certificationReq\": \"NO\",\r\n        \"certificationLink\": \"\",\r\n        \"attribute1\" : \"\",\r\n        \"attribute2\" : \"\",\r\n        \"attribute3\" : \"\",\r\n        \"attribute4\" : \"\",\r\n        \"attribute5\" : \"\"\r\n      }\r\n   ]\r\n}\r\n"
				},
				"url": {
					"raw": "http://localhost:3001/philance/projects/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"projects",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Update with Notifications",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2012034e-47eb-4eff-b9ac-1cf9f361f988",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"firstName\" : \"Vijay Kumar\",\r\n   \"lastName\" : \"Gandra1\",\r\n   \"email\" : \"vijy.gandra@gmail.com\",\r\n   \"location\":\"Nashua, NH\",\r\n   \"interests\" : \"CREATE|DEVELOP\",\r\n   \"organization\":\"Philance\",\r\n   \"rate\":\"60\",\r\n   \"userId\":\"1\",\r\n   \"userSkills\":[  \r\n      {  \r\n        \"skillCode\": \"DATABASE\",\r\n        \"skillName\": \"Database Development\",\r\n        \"certified\": \"Yes\",\r\n        \"certificationLink\": null,\r\n        \"startDate\": \"2018-08-02T00:00:00.000Z\",\r\n        \"endDate\": null\r\n      },\r\n      {  \r\n        \"skillCode\": \"BUSINESS\",\r\n        \"skillName\": \"Project Management\",\r\n        \"certified\": \"Yes\",\r\n        \"certificationLink\": null,\r\n        \"startDate\": \"2018-08-02T00:00:00.000Z\",\r\n        \"endDate\": null\r\n      }\r\n   ],\r\n      \"userNotifications\":\r\n      {  \r\n        \"notificationTrigger\": \"SEND\",\r\n        \"email\": \"Yes\",\r\n        \"text\": \"Yes\",\r\n        \"push\": \"Yes\"\r\n    }\r\n  \r\n}"
				},
				"url": {
					"raw": "http://localhost:3001/philance/users/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"1"
					]
				},
				"description": "UserUpdate"
			},
			"response": []
		},
		{
			"name": "All User Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "290c9ddd-52ef-422b-b3dd-7b177103081c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"// pm.test(\"Response time is less than 100ms\", function () {",
							"//     pm.expect(pm.response.responseTime).to.be.below(1000);",
							"// });",
							"",
							"// var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"console.log(request.data,'*****************');",
							"console.log(resBody[0],'#################');",
							"if(resBody.length===0){",
							"    tests[\"No User Found\"] = true;",
							"    ",
							"}else{",
							"    tests[\"User(s) Found\"] = true;",
							"    ",
							"}",
							"",
							"",
							"// tests.Data = reqBody.fname === resBody[0];"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:3001/philance/users/search",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"search"
					]
				},
				"description": "This Request fetches users from the database on the basis of the different input factors and their combinations.\ninputs keys- \n{\n\tfname,\n\tlname,\n\tpersonLoc,\n\tskill,\n\tptype\n}\n"
			},
			"response": []
		},
		{
			"name": "User Search by Name (firstname)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e909012-72d5-48d6-a0f9-e3eeafabab90",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"// pm.test(\"Response time is less than 100ms\", function () {",
							"//     pm.expect(pm.response.responseTime).to.be.below(1000);",
							"// });",
							"",
							"var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"console.log(request.data,'*****************');",
							"console.log(resBody[0],'#################');",
							"",
							"tests[\"First name matches\"] = resBody[0].fname.includes(reqBody.fname);",
							"",
							"tests[\"First name matches\"] = resBody[0].fname.includes(reqBody.fname);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"fname\":\"Vijay\"\n}"
				},
				"url": {
					"raw": "localhost:3001/philance/users/search",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"search"
					]
				},
				"description": "This Request fetches users from the database on the basis of the different input factors and their combinations.\ninputs keys- \n{\n\tfname,\n\tlname,\n\tpersonLoc,\n\tskill,\n\tptype\n}\n"
			},
			"response": []
		},
		{
			"name": "User Search by Name (lastname)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b510d15-1920-490b-a1a1-8f2ccac3e419",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"// pm.test(\"Response time is less than 100ms\", function () {",
							"//     pm.expect(pm.response.responseTime).to.be.below(1000);",
							"// });",
							"",
							"var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"",
							"if(resBody.length===0){",
							"    tests[\"No User Found\"] = true;",
							"    ",
							"}else{",
							"    tests[\"Last name matches\"] = resBody[0].lname.includes(reqBody.lname);",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"lname\":\"Gandra\"\n}"
				},
				"url": {
					"raw": "localhost:3001/philance/users/search",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"search"
					]
				},
				"description": "This Request fetches users from the database on the basis of the different input factors and their combinations.\ninputs keys- \n{\n\tfname,\n\tlname,\n\tpersonLoc,\n\tskill,\n\tptype\n}\n"
			},
			"response": []
		},
		{
			"name": "User Search by targer user's Location",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75c28ed5-947e-4311-a3b6-60de79dbca71",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"// pm.test(\"Response time is less than 100ms\", function () {",
							"//     pm.expect(pm.response.responseTime).to.be.below(1000);",
							"// });",
							"",
							"var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"",
							"if(resBody.length===0){",
							"    tests[\"No User Found\"] = true;",
							"    ",
							"}else{",
							"    tests[\"Location matches\"] = resBody[0].location.includes(reqBody.personLoc);",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"personLoc\":\"Nashua\"\n}"
				},
				"url": {
					"raw": "localhost:3001/philance/users/search",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"search"
					]
				},
				"description": "This Request fetches users from the database on the basis of the different input factors and their combinations.\ninputs keys- \n{\n\tfname,\n\tlname,\n\tpersonLoc,\n\tskill,\n\tptype\n}\n"
			},
			"response": []
		},
		{
			"name": "User Search by targer user's Skill",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bb968263-cc21-44d2-b067-dfd4d7e7424a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"// pm.test(\"Response time is less than 100ms\", function () {",
							"//     pm.expect(pm.response.responseTime).to.be.below(1000);",
							"// });",
							"",
							"var reqBody = JSON.parse(request.data);",
							"var resBody = JSON.parse(responseBody);",
							"",
							"",
							"if(resBody.length===0){",
							"    tests[\"No User Found\"] = true;",
							"    ",
							"}else{",
							"    tests[\"Skill matches\"] = resBody[0].skill_name.toUpperCase().includes(reqBody.skill.toUpperCase());",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"skill\":\"project management\"\n}"
				},
				"url": {
					"raw": "localhost:3001/philance/users/search",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"philance",
						"users",
						"search"
					]
				},
				"description": "This Request fetches users from the database on the basis of the different input factors and their combinations.\ninputs keys- \n{\n\tfname,\n\tlname,\n\tpersonLoc,\n\tskill,\n\tptype\n}\n"
			},
			"response": []
		}
	]
}